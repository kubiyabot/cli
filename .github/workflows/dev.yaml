name: Developers CI/CD

on:
  push:
    branches-ignore:
      - main
      - production
      - release-*

env:
  environment: development
  REPO_NAME: ${{ github.event.repository.name }}

concurrency:
  group: ${{ github.repository }}-dev-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy
    runs-on: actuated

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set BRANCH_NAME
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
          
      - name: Transform REPO_NAME to CamelCase
        run: |
          formatted_name=$(echo "${{ env.REPO_NAME }}" | sed -r 's/-([a-z])/\U\1/g' | sed 's/-//g')
          echo "FORMATTED_REPO_NAME=$formatted_name" >> $GITHUB_ENV

      # - name: Run tests
      #   run: go test ./...
      
      # - name: Login to Docker Hub # TODO: Check if this is needed
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Buildx and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            564407622114.dkr.ecr.eu-west-1.amazonaws.com/${{ env.REPO_NAME }}:${{ github.sha }}
            564407622114.dkr.ecr.eu-west-1.amazonaws.com/${{ env.REPO_NAME }}:${{ github.actor }}
          build-args: GITHUB_TOKEN=${{ secrets.KUBIYA_GITHUB_TOKEN }}
          platforms: linux/amd64,linux/arm64

      # - name: Configure DEV AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     role-to-assume: arn:aws:iam::079046303224:role/automation-role
      #     aws-region: eu-west-1
      #     role-duration-seconds: 1200
          
      - name: Checkout deployments repository
        uses: actions/checkout@v3
        with:
          repository: kubiyabot/deployments
          ref: main
          token: ${{ secrets.KUBIYA_GITHUB_TOKEN }}

      - name: Update ArgoCD values file and push
        run: |
          yq e '.${{ env.FORMATTED_REPO_NAME }}.image.tag = "${{ github.sha }}"' -i helm/kubiya-server/values.${{ github.actor }}.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          COMMIT_MSG="Update $GITHUB_REPOSITORY image tag to ${{ github.sha }} for $environment by $GITHUB_ACTOR"

          # Check if there are changes
          git add helm/kubiya-server/values.${{ github.actor }}.yaml
          git diff --staged --quiet || HAS_CHANGES=1

          if [ "$HAS_CHANGES" ]; then
              git commit -m "$COMMIT_MSG"
              git push origin main
          else
              echo "No changes to commit."
              echo "NOTHING_TO_COMMIT=1" >> "$GITHUB_ENV"
          fi

      # - name: Restart ${{ env.REPO_NAME }} deployment if no changes
      #   if: env.NOTHING_TO_COMMIT
      #   uses: ianbelcher/eks-kubectl-action@master
      #   with:
      #     eks_role_arn: arn:aws:iam::079046303224:role/dev-eks-admin
      #     aws_region: eu-west-1
      #     cluster_name: dev-kubiya-cluster
      #     args: rollout restart deployment ${{ env.REPO_NAME }} -n ${{ github.actor }}
