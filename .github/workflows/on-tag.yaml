name: Create and publish a Docker image - TAG

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating releases
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build release binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/kubiya-cli-linux-amd64 ./cmd/kubiya/main.go
          GOOS=linux GOARCH=arm64 go build -o dist/kubiya-cli-linux-arm64 ./cmd/kubiya/main.go
          GOOS=darwin GOARCH=amd64 go build -o dist/kubiya-cli-darwin-amd64 ./cmd/kubiya/main.go
          GOOS=darwin GOARCH=arm64 go build -o dist/kubiya-cli-darwin-arm64 ./cmd/kubiya/main.go
          GOOS=windows GOARCH=amd64 go build -o dist/kubiya-cli-windows-amd64.exe ./cmd/kubiya/main.go
          cd dist && sha256sum * > checksums.txt

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=stable,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Create DEB Package
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y build-essential debhelper
      #     mkdir -p packaging/debian/kubiya-cli/usr/local/bin
      #     cp dist/kubiya-cli-linux-amd64 packaging/debian/kubiya-cli/usr/local/bin/kubiya
      #     chmod +x packaging/debian/kubiya-cli/usr/local/bin/kubiya
      #     cd packaging/debian
      #     dpkg-deb --build kubiya-cli
      #     mv kubiya-cli.deb ../../dist/kubiya-cli_${{ github.ref_name }}_amd64.deb

      - name: Create Homebrew Formula
        run: |
          cat > dist/kubiya.rb << EOF
          class Kubiya < Formula
            desc "Kubiya CLI tool"
            homepage "https://github.com/${{ github.repository }}"
            version "${{ github.ref_name }}"
            
            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kubiya-cli-darwin-arm64"
                sha256 "$(sha256sum dist/kubiya-cli-darwin-arm64 | cut -d ' ' -f 1)"
              else
                url "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kubiya-cli-darwin-amd64"
                sha256 "$(sha256sum dist/kubiya-cli-darwin-amd64 | cut -d ' ' -f 1)"
              end
            end

            on_linux do
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kubiya-cli-linux-arm64"
                sha256 "$(sha256sum dist/kubiya-cli-linux-arm64 | cut -d ' ' -f 1)"
              else
                url "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kubiya-cli-linux-amd64"
                sha256 "$(sha256sum dist/kubiya-cli-linux-amd64 | cut -d ' ' -f 1)"
              end
            end

            def install
              bin.install Dir["*"].first => "kubiya"
            end
          end
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Homebrew Tap
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Clone the Homebrew tap repository
          git clone https://x-access-token:${{ secrets.HOMEBREW_TAP_TOKEN }}@github.com/${{ github.repository_owner }}/homebrew-tap.git
          
          # Copy the formula to the tap
          cp dist/kubiya.rb homebrew-tap/Formula/
          
          # Commit and push
          cd homebrew-tap
          git add Formula/kubiya.rb
          git commit -m "Update kubiya to ${{ github.ref_name }}"
          git push