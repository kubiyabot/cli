name: Kubiya API Hotfix CD Workflow

on:
  pull_request:
    branches:
      - production

env:
  environment: staging
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if source branch is a hotfix
        env:
          GH_TOKEN: ${{ secrets.KUBIYA_GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.head_ref }}" =~ .*-hotfix-.* || "${{ github.head_ref }}" =~ .*-HOTFIX-.* ]]; then
            echo "This is a hotfix branch. Updating staging values with production values..."
          else
            echo "This is not a hotfix branch. Cancelling the workflow..."
            gh run cancel ${{ github.run_id }} --repo ${{ github.repository }}
            sleep 3
          fi

      - name: Set BRANCH_NAME
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=sha-,format=short
            type=ref,event=branch
            type=raw,value={{branch}}-{{sha}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: GITHUB_TOKEN=${{ secrets.KUBIYA_GITHUB_TOKEN }}

      - name: Checkout deployments repository
        uses: actions/checkout@v4
        with:
          repository: kubiyabot/deployments
          ref: main
          token: ${{ secrets.KUBIYA_GITHUB_TOKEN }}

      - name: Update staging values with production values
        run: |
          IFS=',' read -ra SERVICE_LIST <<< "$SERVICES"
          for service in "${SERVICE_LIST[@]}"; do
            PROD_TAG=$(yq e ".${service}.image.tag" helm/kubiya-client/values.production.yaml)
            yq e ".${service}.image.tag = \"$PROD_TAG\"" -i helm/kubiya-client/values.staging.yaml
          done
          IFS=',' read -ra SERVICE_LIST <<< "$BE_SERVICES"
          for service in "${SERVICE_LIST[@]}"; do
            PROD_TAG=$(yq e ".${service}.image.tag" helm/kubiya-server/values.production.yaml)
            yq e ".${service}.image.tag = \"$PROD_TAG\"" -i helm/kubiya-server/values.staging.yaml
          done
          yq e ".api.image.tag = \"$PROD_TAG\"" -i helm/kubiya-server/values.staging.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          COMMIT_MSG="Update $GITHUB_REPOSITORY image tag to $GITHUB_SHA for $environment by $GITHUB_ACTOR"
          git commit -am "$COMMIT_MSG"
          git push
