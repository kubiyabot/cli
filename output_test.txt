📁 Using session directory: /Users/shaked/projects/kubiya/cli/gen-1739421338
📝 Debug log: /Users/shaked/projects/kubiya/cli/gen-1739421338/debug.log
🎯 Generating tool from description: tool to create a JIRA ticket
🔑 Using session ID: gen-1739421338

🚀 Starting tool generation...
🔍 Request details:
  URL: https://api.kubiya.ai/api/v1/http-bridge/v1/generate-tool
  Payload: {"message":"tool to create a JIRA ticket","session_id":"gen-1739421338"}
📡 Response details:
  Status: 200 OK
  Headers: map[Access-Control-Allow-Credentials:[true] Access-Control-Allow-Headers:[Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With] Access-Control-Allow-Methods:[POST, DELETE, GET, PUT] Access-Control-Allow-Origin:[*] Cache-Control:[no-cache] Content-Security-Policy:[default-src 'self'] Content-Type:[text/event-stream; charset=utf-8] Date:[Thu, 13 Feb 2025 04:35:39 GMT] Feature-Policy:[geolocation 'self' https://app.kubiya.ai; microphone 'none'] Referrer-Policy:[no-referrer] Strict-Transport-Security:[max-age=15724800; includeSubDomains] X-Content-Type-Options:[nosniff] X-Frame-Options:[DENY] X-Xss-Protection:[1; mode=block]]
📥 Starting to read SSE stream...
📨 Received line: "{\"generated_tool_content\":[]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kub\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kub\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass Create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJ\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPython\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(T\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_j\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests >\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  #\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass Jira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issu\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ ==\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.Argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = Jira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result =\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description,\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the J\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/j\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\nt\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_j\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\",\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", Create\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", CreateJ\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", CreateJira\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", CreateJiraTicket\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", CreateJiraTicketPython\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", CreateJiraTicketPythonTool\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", CreateJiraTicketPythonTool())\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"\",\"file_name\":\"jira_ticket_tool.py\"}]}"
📨 Received line: "{\"generated_tool_content\":[{\"content\":\"from kubiya_sdk.tools import Tool, Arg\\nfrom kubiya_sdk.tools.registry import tool_registry\\n\\nclass CreateJiraTicketPythonTool(Tool):\\n    def __init__(self):\\n        super().__init__(\\n            name=\\\"create_jira_ticket\\\",\\n            description=\\\"Tool to create a JIRA ticket\\\",\\n            on_build=\\\"pip install requests > /dev/null\\\",  # Install dependencies if needed\\n            content='''\\nimport argparse\\nimport requests\\n\\nclass JiraClient:\\n    def __init__(self, base_url, username, api_token):\\n        self.base_url = base_url\\n        self.auth = (username, api_token)\\n\\n    def create_ticket(self, project_key, summary, description, issue_type=\\\"Task\\\"):\\n        url = f\\\"{self.base_url}/rest/api/2/issue\\\"\\n        headers = {\\n            \\\"Content-Type\\\": \\\"application/json\\\"\\n        }\\n        payload = {\\n            \\\"fields\\\": {\\n                \\\"project\\\": {\\n                    \\\"key\\\": project_key\\n                },\\n                \\\"summary\\\": summary,\\n                \\\"description\\\": description,\\n                \\\"issuetype\\\": {\\n                    \\\"name\\\": issue_type\\n                }\\n            }\\n        }\\n        response = requests.post(url, json=payload, auth=self.auth, headers=headers)\\n        return response.json()\\n\\nif __name__ == \\\"__main__\\\":\\n    parser = argparse.ArgumentParser(description=\\\"Create a JIRA ticket\\\")\\n    parser.add_argument(\\\"--base-url\\\", required=True, help=\\\"JIRA instance base URL\\\")\\n    parser.add_argument(\\\"--username\\\", required=True, help=\\\"JIRA username\\\")\\n    parser.add_argument(\\\"--api-token\\\", required=True, help=\\\"JIRA API token\\\")\\n    parser.add_argument(\\\"--project-key\\\", required=True, help=\\\"JIRA project key\\\")\\n    parser.add_argument(\\\"--summary\\\", required=True, help=\\\"Summary of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--description\\\", required=True, help=\\\"Description of the JIRA ticket\\\")\\n    parser.add_argument(\\\"--issue-type\\\", default=\\\"Task\\\", help=\\\"Type of the JIRA issue (default is Task)\\\")\\n\\n    args = parser.parse_args()\\n\\n    jira_client = JiraClient(args.base_url, args.username, args.api_token)\\n    result = jira_client.create_ticket(args.project_key, args.summary, args.description, args.issue_type)\\n    print(result)\\n''',\\n            args=[\\n                Arg(name=\\\"base_url\\\", description=\\\"JIRA instance base URL\\\", required=True),\\n                Arg(name=\\\"username\\\", description=\\\"JIRA username\\\", required=True),\\n                Arg(name=\\\"api_token\\\", description=\\\"JIRA API token\\\", required=True),\\n                Arg(name=\\\"project_key\\\", description=\\\"JIRA project key\\\", required=True),\\n                Arg(name=\\\"summary\\\", description=\\\"Summary of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"description\\\", description=\\\"Description of the JIRA ticket\\\", required=True),\\n                Arg(name=\\\"issue_type\\\", description=\\\"Type of the JIRA issue (default is Task)\\\", required=False)\\n            ],\\n            env=[],\\n            secrets=[\\\"api_token\\\"],\\n            icon_url=\\\"https://example.com/jira_icon.png\\\"\\n        )\\n\\ntool_registry.register(\\\"create_jira_ticket\\\", CreateJiraTicketPythonTool())\\n\",\"file_name\":\"jira_ticket_tool.py\"}]}"
✅ Stream ended (EOF). Final buffer content:

